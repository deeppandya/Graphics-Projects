#version 430                                                                               
                                                                                                
layout(triangles, equal_spacing, cw) in;                                                       
                                                                                                
uniform mat4 VP;                                                                               
uniform mat4 W_Tran;
out vec3 tePatchDistance;

                                                                                                
struct OutputPatch                                                                              
{                                                                                               
    vec3 B030;                                                                         
    vec3 B021;                                                                         
    vec3 B012;                                                                         
    vec3 B003;                                                                         
    vec3 B102;                                                                         
    vec3 B201;                                                                         
    vec3 B300;                                                                         
    vec3 B210;                                                                         
    vec3 B120;                                                                         
    vec3 B111;                                                                         
    vec3 Normal[3];                                                                                                                                                       
};                                                                                              
                                                                                                
in patch OutputPatch oPatch;                                                                    
                                                                                                
out vec3 _vertices_in;                                                                                                                                               
out vec3 _normals_in;                                                                          
                                                                                                
vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)                                                   
{                                                                                               
    return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;   
}                                                                                               
                                                                                                
vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)                                                   
{                                                                                               
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;   
}                                                                                               
                                                                                                
void main()                                                                                     
{                                                                                               
    _normals_in = interpolate3D(oPatch.Normal[0], oPatch.Normal[1], oPatch.Normal[2]);         
                                                                                                
    float u = gl_TessCoord.x;                                                                   
    float v = gl_TessCoord.y;                                                                   
    float w = gl_TessCoord.z;                                                                   
    float uPow3 = pow(u, 3);                                                                    
    float vPow3 = pow(v, 3);                                                                    
    float wPow3 = pow(w, 3);                                                                    
    float uPow2 = pow(u, 2);                                                                    
    float vPow2 = pow(v, 2);                                                                    
    float wPow2 = pow(w, 2);                                                                    
    _vertices_in = oPatch.B300 * wPow3 + oPatch.B030 * uPow3 + oPatch.B003 * vPow3 +                               
                     oPatch.B210 * 3.0 * wPow2 * u + oPatch.B120 * 3.0 * w * uPow2 + oPatch.B201 * 3.0 * wPow2 * v + 
                     oPatch.B021 * 3.0 * uPow2 * v + oPatch.B102 * 3.0 * w * vPow2 + oPatch.B012 * 3.0 * u * vPow2 + 
                     oPatch.B111 * 6.0 * w * u * v;        
					 tePatchDistance=gl_TessCoord;                            
    gl_Position = VP*W_Tran * vec4(_vertices_in, 1.0);                                              
}                                                                                               
